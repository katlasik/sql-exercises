sections = [
  {
    name = Pobieranie danych
    exercises = [
      {
        description = "Pobierz wszyskie dane z tabeli <em>students</em>."
        verifing-query = "SELECT * FROM students"
      }
      {
        description = "Wyszukaj tylko imiona i nazwiska studentów w tabeli <em>students</em>."
        verifing-query = "SELECT first_name, last_name FROM students"
      }
      {
        description = "Wyszukaj id oraz imiona i nazwiska nauczycieli w tabeli <em>teachers</em>."
        verifing-query = "SELECT id, first_name, last_name FROM teachers"
      }
      {
        description = "Wyszukaj nazwiska i imiona nauczycieli w tabeli <em>teachers</em> oraz posortuj wyniki alfabetycznie po nazwisku i imieniu."
        verifing-query = "SELECT last_name, first_name FROM teachers ORDER BY last_name, first_name"
      }
      {
        description = "Wyszukaj imiona, nazwiska i datę urodzenia studentów w tabeli <em>students</em> i posortuj wyniki narastająco po dacie urodzenia."
        verifing-query = "SELECT first_name, last_name, birthdate FROM students ORDER BY birthdate"
      }
      {
        description = "Znajdź wszystkie oceny z tabeli <em>student_notes</em> i posortuje je od najlepszej do najgorszej"
        verifing-query = "SELECT * FROM student_notes ORDER BY value DESC"
      }
    ]
  }
  {
    name = Filtrowanie danych
    exercises = [
      {
        description = "Wyszukaj dane w tabeli <em>students</em> studenta, którego id to 3."
        verifing-query = "SELECT * FROM students WHERE id = 3"
      }
      {
        description = "Wyszukaj dane w tabeli <em>students</em>, tak aby pobrać tylko studentów, których imię to Szymon."
        verifing-query = "SELECT * FROM students WHERE first_name = 'Szymon'"
      }
      {
        description = "Wyszukaj dane w tabeli <em>students</em>, tak aby pobrać tylko studentów urodzonych przed 1 stycznia 1999 roku."
        verifing-query = "SELECT * FROM students WHERE birthdate < '1999-01-01'"
      }
      {
        description = "Wyszukaj dane w tabeli <em>students</em>, tak aby pobrać tylko studentów urodzonych przed 1 stycznia 1999 roku, ale po 1 stycznia 1998 roku."
        verifing-query = "SELECT * FROM students WHERE birthdate < '1999-01-01' AND birthdate > '1998-01-01'"
      }
      {
        description = "Wyszukaj dane w tabeli <em>students</em>, tak aby pobrać tylko studentów urodzonych przed 1 stycznia 1999 roku, ale po 1 stycznia 1998 roku."
        verifing-query = "SELECT * FROM students WHERE birthdate BETWEEN '1998-01-01' AND '1999-01-01'"
      }
      {
        description = "Wyszukaj dane w tabeli <em>students</em>, tak aby pobrać tylko studentów NIE urodzonych przed 1 stycznia 1999 roku, ale po 1 stycznia 1998 roku."
        verifing-query = "SELECT * FROM students WHERE birthdate NOT BETWEEN '1998-01-01' AND '1999-01-01'"
      }
      {
        description = "Znajdź imiona 3 nastarszych studentów w tabeli <em>students</em>."
        verifing-query = "SELECT first_name FROM students ORDER BY birthdate LIMIT 3"
      }
      {
        description = "Znajdź studentów, których nazwiska zaczynają się do Ko."
        verifing-query = "SELECT * FROM students WHERE last_name LIKE 'Ko%'"
      }
      {
        description = "Znajdź studentów, których nazwiska zaczynają się do Ko."
        verifing-query = "SELECT * FROM students WHERE last_name LIKE 'Ko%'"
      }
    ]
  }
  {
    name = Operatory
    exercises = [
      {
        description = "Zwróć imiona i nazwiska studentów jako jedną kolumnę o nazwie <em>name</em> z table <em>students</em>."
        verifing-query = "SELECT CONCAT(first_name, ' ', last_name) as name FROM students"
      }
      {
        description = "Zwróć imiona i nazwiska studentów jako jedną kolumnę o nazwie <em>name</em> z table <em>students</em>."
        verifing-query = "SELECT first_name, LENGTH(last_name) as length FROM students"
      }
      {
        description = "Zwróć imiona i nazwiska studentów jako jedną kolumnę o nazwie <em>name</em> z table <em>students</em>."
        verifing-query = "SELECT CONCAT(first_name, ' ', last_name) as name, LENGTH(last_name) + LENGTH(first_name) as length FROM students"
      }
      {
        description = "Zwróć nazwy przedmiotów z tabeli <em>school_classes</em> zmieniająć wszytkie litery na duże w kolumnie o nazwie <em>name</em>."
        verifing-query = "SELECT upper(name) as name FROM school_classes"
      }
    ]
  }
  {
    name = Agregacje
    exercises = [
      {
        description = "Zwróć średni wiek studentów liczony w latach."
        verifing-query = "SELECT avg(year(current_timestamp) - year(birthdate)) as avg FROM students"
      }
      {
        description = "Zwróć ilość wszystkich ocen (tabela <em>student_notes</em>) według stopni w kolejności od najlepszej."
        verifing-query = "SELECT value, count(1) AS quantity FROM student_notes GROUP BY value ORDER BY value DESC"
      }
      {
        description = "Zwróć ilość ocen w tabeli <em>student_notes</em> według miesięcy (bez względu na rok) w kolejności od stycznia."
        verifing-query = "SELECT month(received_at) AS month, count(1) AS quantity FROM student_notes GROUP BY month(received_at) ORDER BY month(received_at)"
      }
      {
        description = "Znajdź długość najkrótszego nazwiska studenta."
        verifing-query = "SELECT MIN(LENGTH(last_name)) AS min_length FROM students"
      }
    ]
  }
  {
    name = Złączenia
    exercises = [
      {
        description = """Wyświetl wszystkich nauczycieli oraz klasy, których uczą. Jeżeli nie uczą żadnej klasy, to wyświetl null.
        Zwróć kolumny z imieniem i nazwiskiem oraz z nazwą przedmiotu"""
        verifing-query = "SELECT first_name, last_name, school_classes.name AS note FROM teachers LEFT JOIN school_classes ON school_classes.teacher_id = teachers.id"
      }
      {
        description = "Znajdź najlepszą ocenę jaką dostał uczeń. Zwróć dwie kolumny: uczeń i ocena. Jeżeli uczęń nie dostał żadnej oceny wyświetl <em>---</em>."
        verifing-query = "SELECT first_name, last_name, COALESCE(MAX(value), '---') AS note FROM students LEFT JOIN student_notes  ON students.id = student_notes.student_id GROUP BY first_name, last_name"
      }
      {
        description = "Wyznacz średnią ocen każdego ucznia."
        verifing-query = "SELECT first_name, last_name, AVG(value) AS avg FROM student_notes JOIN students ON students.id = student_notes.student_id GROUP BY first_name, last_name"
      }
      {
        description = "Wyznacz średnią ocen każdego ucznia, ale wyświetl tylko średnie powyżej 3.5."
        verifing-query = "SELECT first_name, last_name, AVG(value) AS avg FROM student_notes JOIN students ON students.id = student_notes.student_id GROUP BY first_name, last_name HAVING avg > 3.5"
      }
    ]
  }
  {
    name = Unie
    exercises = [
      {
        description = "Zwróć listę imion i nazwisk studentów i nauczycieli. Kolumny nazwij <em>imię</em> i <em>nazwisko</em>."
        verifing-query = "SELECT first_name as imię, last_name as nazwisko FROM students UNION SELECT first_name, last_name FROM teachers"
      }
      {
        description = "Zwróć listę nazwisk uczniów i nauczycieli  w jednej kolumnie a w drugiej to jak często występują."
        verifing-query = "SELECT last_name AS nazwisko, count(1) AS ile_razy FROM (SELECT last_name FROM students UNION ALL SELECT last_name FROM teachers) names GROUP BY last_name"
      }
    ]
  }
]
